// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include common_scripts\utility;
#include maps\mp\_utility;
#include maps\mp\zombies\_zm_utility;
#include maps\mp\zombies\_zm_unitrigger;
#include maps\mp\zm_tomb_utility;

init_shovel()
{
    a_shovels = getentarray( "shovel", "targetname" );

    foreach ( e_shovel in a_shovels )
        generate_shovel_unitrigger( e_shovel );

    registerclientfield( "world", "shovel_player1", 14000, 1, "int", undefined, 0 );
    registerclientfield( "world", "shovel_player2", 14000, 1, "int", undefined, 0 );
    registerclientfield( "world", "shovel_player3", 14000, 1, "int", undefined, 0 );
    registerclientfield( "world", "shovel_player4", 14000, 1, "int", undefined, 0 );
}

generate_shovel_unitrigger( e_shovel )
{
    s_unitrigger_stub = spawnstruct();
    s_unitrigger_stub.origin = e_shovel.origin + vectorscale( ( 0, 0, 1 ), 32.0 );
    s_unitrigger_stub.angles = e_shovel.angles;
    s_unitrigger_stub.radius = 64;
    s_unitrigger_stub.script_length = 64;
    s_unitrigger_stub.script_width = 64;
    s_unitrigger_stub.script_height = 64;
    s_unitrigger_stub.cursor_hint = "HINT_NOICON";
    s_unitrigger_stub.hint_string = &"ZM_TOMB_SHOVEL_PICK_UP";
    s_unitrigger_stub.script_unitrigger_type = "unitrigger_box_use";
    s_unitrigger_stub.require_look_at = 1;
    s_unitrigger_stub.prompt_and_visibility_func = ::shovel_trigger_prompt_and_visiblity;
    s_unitrigger_stub.e_shovel = e_shovel;
    unitrigger_force_per_player_triggers( s_unitrigger_stub, 1 );
    maps\mp\zombies\_zm_unitrigger::register_static_unitrigger( s_unitrigger_stub, ::shovel_unitrigger_think );
}

shovel_trigger_prompt_and_visiblity( e_player )
{
    can_use = self.stub shovel_prompt_update( e_player );
    self setinvisibletoplayer( e_player, !can_use );
    self sethintstring( self.stub.hint_string );
    return can_use;
}

shovel_prompt_update( e_player )
{
    if ( !self unitrigger_stub_show_hint_prompt_valid( e_player ) )
        return false;

    self.hint_string = &"ZM_TOMB_SHOVEL_PICK_UP";

    if ( isdefined( e_player.has_shovel ) && e_player.has_shovel )
        self.hint_string = &"ZM_TOMB_SHOVEL_ALREADY_GOTTEN";

    return true;
}

shovel_unitrigger_think()
{
    self endon( "kill_trigger" );

    while ( true )
    {
        self waittill( "trigger", e_player );

        if ( e_player != self.parent_player )
            continue;

        if ( !( isdefined( e_player.has_shovel ) && e_player.has_shovel ) )
        {
            e_player.has_shovel = 1;
            self.stub.e_shovel delete();
            e_player playsound( "zmb_craftable_pickup" );
            n_player = e_player getentitynumber() + 1;
            level setclientfield( "shovel_player" + n_player, 1 );
            maps\mp\zombies\_zm_unitrigger::unregister_unitrigger( self.stub );
        }
    }
}

unitrigger_stub_show_hint_prompt_valid( e_player )
{
    if ( !is_player_valid( e_player ) )
    {
        self.hint_string = "";
        return false;
    }

    return true;
}
