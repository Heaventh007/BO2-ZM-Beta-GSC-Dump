// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\zombies\_zm_weapons;
#include clientscripts\mp\zombies\_zm_utility;
#include clientscripts\mp\zombies\_zm_radio;
#include clientscripts\mp\zm_asylum_fx;
#include clientscripts\mp\zm_asylum_amb;
#include clientscripts\mp\zombies\_zm;
#include clientscripts\mp\zombies\_zm_weap_thundergun;
#include clientscripts\mp\zombies\_zm_weap_cymbal_monkey;
#include clientscripts\mp\zombies\_zm_weap_freezegun;

main()
{
    level.default_game_mode = "zclassic";
    level.zombiemode_using_doubletap_perk = 1;
    level.zombiemode_using_juggernaut_perk = 1;
    level.zombiemode_using_revive_perk = 1;
    level.zombiemode_using_sleightofhand_perk = 1;
    level.zombiemode_using_additionalprimaryweapon_perk = 1;
    clientscripts\mp\zombies\_zm_radio::init();
    start_zombie_stuff();
    clientscripts\mp\zm_asylum_fx::main();

    if ( !is_true( level.createfx_enabled ) )
        init_level_specific_wall_buy_fx();

    thread clientscripts\mp\zm_asylum_amb::main();
    waitforclient( 0 );
    level thread swinging_lamp_init();
    level thread watch_for_power();
/#
    println( "*** Client : zombie running...or is it chasing? Muhahahaha" );
#/
}

start_zombie_stuff()
{
    if ( !is_true( getdvar( #"createfx" ) != "" ) )
        include_weapons();

    include_powerups();
    clientscripts\mp\zombies\_zm::init();
    clientscripts\mp\zombies\_zm_weap_thundergun::init();
    clientscripts\mp\zombies\_zm_weap_cymbal_monkey::init();
    clientscripts\mp\zombies\_zm_weap_freezegun::init();
}

init_level_specific_wall_buy_fx()
{
    level._effect["frag_grenade_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_frag_nade" );
    level._effect["an94_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_an94" );
    level._effect["ballista_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_ballista" );
    level._effect["judge_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_executioner" );
    level._effect["fnfal_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_fal" );
    level._effect["mp40_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_mp40" );
    level._effect["mp44_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_stg44" );
    level._effect["thompson_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_thompson" );
}

include_weapons()
{
    include_weapon( "knife_zm", 0 );
    include_weapon( "claymore_zm", 0 );
    include_weapon( "frag_grenade_zm", 0 );
    include_weapon( "m1911_zm", 0 );
    include_weapon( "m1911_upgraded_zm", 0 );
    include_weapon( "python_zm" );
    include_weapon( "python_upgraded_zm", 0 );
    include_weapon( "fiveseven_zm" );
    include_weapon( "fiveseven_upgraded_zm", 0 );
    include_weapon( "fivesevendw_zm" );
    include_weapon( "fivesevendw_upgraded_zm", 0 );
    include_weapon( "mp5k_zm", 0 );
    include_weapon( "mp5k_upgraded_zm", 0 );
    include_weapon( "mp40_zm", 0 );
    include_weapon( "mp40_upgraded_zm", 0 );
    include_weapon( "mpl_zm", 0 );
    include_weapon( "mpl_upgraded_zm", 0 );
    include_weapon( "pm63_zm", 0 );
    include_weapon( "pm63_upgraded_zm", 0 );
    include_weapon( "kard_zm" );
    include_weapon( "kard_upgraded_zm", 0 );
    include_weapon( "saiga12_zm" );
    include_weapon( "saiga12_upgraded_zm", 0 );
    include_weapon( "thompson_zm", 0 );
    include_weapon( "thompson_upgraded_zm", 0 );
    include_weapon( "rottweil72_zm", 0 );
    include_weapon( "rottweil72_upgraded_zm", 0 );
    include_weapon( "srm1216_zm" );
    include_weapon( "srm1216_upgraded_zm", 0 );
    include_weapon( "hs10_zm" );
    include_weapon( "hs10_upgraded_zm", 0 );
    include_weapon( "judge_zm", 0 );
    include_weapon( "judge_upgraded_zm", 0 );
    include_weapon( "870mcs_zm", 0 );
    include_weapon( "870mcs_upgraded_zm", 0 );
    include_weapon( "m14_zm", 0 );
    include_weapon( "m14_upgraded_zm", 0 );
    include_weapon( "type95_zm" );
    include_weapon( "type95_upgraded_zm", 0 );
    include_weapon( "tar21_zm" );
    include_weapon( "tar21_upgraded_zm", 0 );
    include_weapon( "galil_zm" );
    include_weapon( "galil_upgraded_zm", 0 );
    include_weapon( "hk416_zm" );
    include_weapon( "hk416_upgraded_zm", 0 );
    include_weapon( "fnfal_zm", 0 );
    include_weapon( "fnfal_upgraded_zm", 0 );
    include_weapon( "sa58_zm" );
    include_weapon( "sa58_upgraded_zm", 0 );
    include_weapon( "an94_zm", 0 );
    include_weapon( "an94_upgraded_zm", 0 );
    include_weapon( "xm8_zm" );
    include_weapon( "xm8_upgraded_zm", 0 );
    include_weapon( "dsr50_zm" );
    include_weapon( "dsr50_upgraded_zm", 0 );
    include_weapon( "ballista_zm", 0 );
    include_weapon( "ballista_upgraded_zm", 0 );
    include_weapon( "rpd_zm" );
    include_weapon( "rpd_upgraded_zm", 0 );
    include_weapon( "hamr_zm" );
    include_weapon( "hamr_upgraded_zm", 0 );
    include_weapon( "mp44_zm", 0 );
    include_weapon( "mp44_upgraded_zm", 0 );
    include_weapon( "usrpg_zm" );
    include_weapon( "usrpg_upgraded_zm", 0 );
    include_weapon( "m32_zm" );
    include_weapon( "m32_upgraded_zm", 0 );
    include_weapon( "cymbal_monkey_zm" );
    include_weapon( "emp_grenade_zm" );
    include_weapon( "ray_gun_zm" );
    include_weapon( "ray_gun_upgraded_zm", 0 );
    include_weapon( "thundergun_zm" );
    include_weapon( "thundergun_upgraded_zm", 0 );
    include_weapon( "jetgun_zm" );
    include_weapon( "jetgun_upgraded_zm", 0 );
    include_weapon( "tazer_knuckles_zm" );
    include_weapon( "knife_ballistic_no_melee_zm", 0 );
    include_weapon( "knife_ballistic_no_melee_upgraded_zm", 0 );
    include_weapon( "knife_ballistic_zm" );
    include_weapon( "knife_ballistic_upgraded_zm", 0 );
    include_weapon( "freezegun_zm" );
    include_weapon( "freezegun_upgraded_zm", 0 );
}

include_powerups()
{
    include_powerup( "nuke" );
    include_powerup( "insta_kill" );
    include_powerup( "double_points" );
    include_powerup( "full_ammo" );
    include_powerup( "carpenter" );
}

zombie_monitor( clientnum )
{
    self endon( "disconnect" );
    self endon( "zombie_off" );

    while ( true )
    {
        if ( isdefined( self.zombifyfx ) )
            playfx( clientnum, level._effect["zombie_grain"], self.origin );

        wait 0.1;
    }
}

zombifyhandler( clientnum, newstate, oldstate )
{
    player = getlocalplayers()[clientnum];

    if ( newstate == "1" )
    {
        if ( !isdefined( player.zombifyfx ) )
        {
            player.zombifyfx = 1;
            player thread zombie_monitor( clientnum );
/#
            println( "Zombie effect on" );
#/
        }
    }
    else if ( newstate == "0" )
    {
        if ( isdefined( player.zombifyfx ) )
        {
            player.zombifyfx = undefined;
            self notify( "zombie_off" );
/#
            println( "Zombie effect off" );
#/
        }
    }
}

swinging_lamp_init( clientnum )
{
    if ( !isdefined( clientnum ) )
        clientnum = 0;

    lantern = getdynent( "morgue_lamp" );
}

watch_for_power()
{
    if ( is_true( level.createfx_enabled ) )
        return;

    for ( looped_once = 0; 1; looped_once = 1 )
    {
        if ( !level getclientfield( "zombie_power_on" ) )
        {
            level.power_on = 0;

            if ( looped_once )
                level notify( "power_controlled_light" );

            level waittill_any( "power_on", "pwr", "ZPO" );
        }

        level notify( "power_controlled_light" );
        level waittill_any( "pwo", "ZPOff" );
    }
}
