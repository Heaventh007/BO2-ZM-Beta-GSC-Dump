// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\_ambientpackage;
#include clientscripts\mp\_music;
#include clientscripts\mp\_audio;

main()
{
    declareambientroom( "asylum_default", 1 );
    declareambientpackage( "asylum_default" );
    setambientroomreverb( "asylum_default", "socotra_stoneroom", 1, 1 );
    setambientroomtone( "asylum_default", "player_ambience", 4, 4 );
    setambientroomcontext( "asylum_default", "ringoff_plr", "indoor" );
    addambientelement( "asylum_default", "amb_spooky_2d", 5, 9, 250, 1250 );
    declaremusicstate( "SPLASH_SCREEN" );
    musicalias( "mx_splash_screen", 12 );
    musicwaittilldone();
    declaremusicstate( "WAVE" );
    musicaliasloop( "mus_asylum_underscore", 0, 4 );
    declaremusicstate( "EGG" );
    musicalias( "mus_asylum_egg", 1 );
    declaremusicstate( "SILENCE" );
    musicalias( "null", 1 );
    thread start_lights();
    thread play_random_generator_sparks();
    declareambientroom( "zombies" );
    declareambientpackage( "zombies" );
    setambientroomreverb( "zombies", "RV_ZOMBIES_ASYLUM_DEFAULT", 1, 1 );
    setambientroomcontext( "zombies", "ringoff_plr", "indoor" );
    addambientelement( "zombies", "amb_spooky_2d", 5, 8, 300, 2000 );
    declareambientroom( "bathroom" );
    declareambientpackage( "bathroom" );
    setambientroomreverb( "bathroom", "RV_ZOMBIES_ASYLUM_BATHROOM", 1, 1 );
    setambientroomcontext( "bathroom", "ringoff_plr", "indoor" );
    addambientelement( "bathroom", "amb_spooky_2d", 5, 8, 300, 2000 );
    addambientelement( "bathroom", "amb_water_drips_rand", 0.2, 0.5, 50, 350 );
    declareambientroom( "outside" );
    declareambientpackage( "outside" );
    setambientroomreverb( "outside", "RV_ZOMBIES_ASYLUM_OUTDOOR", 1, 1 );
    setambientroomcontext( "outside", "ringoff_plr", "outdoor" );
    addambientelement( "outside", "amb_spooky_2d", 5, 8, 300, 2000 );
}

start_lights()
{
    level waittill( "start_lights" );
    wait 2.0;
    array_thread( getstructarray( "electrical_circuit", "targetname" ), ::circuit_sound );
    wait 3.0;
    array_thread( getstructarray( "electrical_surge", "targetname" ), ::light_sound );
    array_thread( getstructarray( "low_buzz", "targetname" ), ::buzz_sound );
    array_thread( getstructarray( "oneshot_sparks_loop", "targetname" ), ::play_oneshot_sparks_loop );
    array_thread( getstructarray( "light_ceiling", "targetname" ), ::light_sound );
    thread play_elec_room_sweets();
    wait 7;
    playsound( 0, "zmb_turn_on", ( 0, 0, 0 ) );
    playertrack = clientscripts\mp\_audio::playloopat( "player_ambience", ( 0, 0, 0 ) );
    wait 2;
    playsound( 0, "zmb_ann_vox_laugh_l", ( -16, 184, 952 ) );
}

light_sound()
{
    wait( randomfloatrange( 1, 4 ) );
    playsound( 0, "evt_electrical_surge", self.origin );
    playfx( 0, level._effect["electric_short_oneshot"], self.origin );
    wait( randomfloatrange( 1, 2 ) );
    e1 = clientscripts\mp\_audio::playloopat( "light", self.origin );
    self run_sparks_loop();
}

run_sparks_loop()
{
    while ( true )
    {
        wait( randomfloatrange( 4, 15 ) );

        if ( randomfloatrange( 0, 1 ) < 0.5 )
        {
            playfx( 0, level._effect["electric_short_oneshot"], self.origin );
            playsound( 0, "evt_electrical_surge", self.origin );
        }

        wait( randomintrange( 1, 4 ) );
    }
}

circuit_sound()
{
    wait 1;
    playsound( 0, "zmb_circuit", self.origin );
}

buzz_sound()
{
    lowbuzz = clientscripts\mp\_audio::playloopat( "low_arc", self.origin );
}

play_oneshot_sparks_loop()
{
    while ( true )
    {
        wait( randomfloatrange( 0.25, 0.5 ) );
        playfx( 0, level._effect["wire_sparks_oneshot"], self.origin );
        playsound( 0, "arc_spark_light", self.origin );
    }
}

play_random_generator_sparks()
{
    level endon( "switch_flipped_generator" );

    while ( true )
    {
        wait( randomfloatrange( 0.45, 0.85 ) );
        playsound( 0, "elec_arc_generator", ( -672, -264, 296 ) );
    }
}

play_elec_room_sweets()
{
    while ( true )
    {
        wait( randomfloatrange( 0.25, 1 ) );
        playsound( 0, "elec_room_sweets", ( -584, -392, 344 ) );
    }
}
