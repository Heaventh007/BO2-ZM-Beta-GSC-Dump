// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include common_scripts\utility;
#include maps\mp\_utility;
#include maps\mp\zombies\_zm_utility;
#include maps\mp\zombies\_zm_weapons;
#include maps\mp\zm_prototype_fx;
#include maps\mp\zombies\_zm;
#include maps\mp\animscripts\zm_death;
#include maps\mp\_sticky_grenade;
#include maps\mp\zombies\_load;
#include maps\mp\zm_prototype_amb;
#include maps\mp\gametypes_zm\_spawning;
#include maps\mp\zombies\_zm_radio;
#include maps\mp\zombies\_zm_weap_cymbal_monkey;
#include maps\mp\zombies\_zm_weap_ballistic_knife;
#include maps\mp\zombies\_zm_weap_thundergun;
#include maps\mp\zombies\_zm_weap_bowie;
#include maps\mp\zombies\_zm_zonemgr;
#include maps\mp\createart\zm_prototype_art;
#include maps\mp\zombies\_zm_game_module;
#include character\c_usa_dempsey_zm;
#include character\c_rus_nikolai_zm;
#include character\c_jap_takeo_zm;
#include character\c_ger_richtofen_zm;
#include maps\mp\zombies\_zm_audio;

main()
{
    maps\mp\zm_prototype_fx::main();
    maps\mp\zombies\_zm::init_fx();
    maps\mp\animscripts\zm_death::precache_gib_fx();
    level.zombiemode = 1;
    level thread maps\mp\_sticky_grenade::init();
    maps\mp\zombies\_load::main();
    maps\mp\zm_prototype_amb::main();
    maps\mp\gametypes_zm\_spawning::level_use_unified_spawning( 1 );
    level._round_start_func = maps\mp\zombies\_zm::round_start;
    level.givecustomloadout = ::givecustomloadout;
    level.precachecustomcharacters = ::precachecustomcharacters;
    level.givecustomcharacters = ::givecustomcharacters;
    initcharacterstartindex();
    level.zombiemode_using_tombstone_perk = 0;
    level._zombie_custom_add_weapons = ::custom_add_weapons;
    include_weapons();
    include_powerups();
    maps\mp\zombies\_zm_radio::init();
    init_level_specific_wall_buy_fx();
    level.zombiemode_using_additionalprimaryweapon_perk = 1;
    maps\mp\zombies\_zm::init();
    maps\mp\zombies\_zm_weap_cymbal_monkey::init();
    maps\mp\zombies\_zm_weap_ballistic_knife::init();
    maps\mp\zombies\_zm_weap_thundergun::init();
    maps\mp\zombies\_zm_weap_bowie::init();
    setdvar( "magic_chest_movable", "0" );
    level.zones = [];
    level.zone_manager_init_func = ::prototype_zone_init;
    init_zones[0] = "start_zone";
    level thread maps\mp\zombies\_zm_zonemgr::manage_zones( init_zones );
    level.zombie_ai_limit = 24;
    maps\mp\createart\zm_prototype_art::main();
    level thread prototype_eggs();
    level thread time_to_play();
    flag_wait( "start_zombie_round_logic" );
    level notify( "tombstone_on" );
    maps\mp\zombies\_zm_game_module::turn_power_on_and_open_doors();
}

precachecustomcharacters()
{
    character\c_usa_dempsey_zm::precache();
    character\c_rus_nikolai_zm::precache();
    character\c_jap_takeo_zm::precache();
    character\c_ger_richtofen_zm::precache();
    precachemodel( "viewmodel_usa_pow_arms" );
    precachemodel( "viewmodel_rus_prisoner_arms" );
    precachemodel( "viewmodel_vtn_nva_standard_arms" );
    precachemodel( "viewmodel_usa_hazmat_arms" );
}

initcharacterstartindex()
{
    level.characterstartindex = randomint( 4 );
}

selectcharacterindextouse()
{
    if ( level.characterstartindex >= 4 )
        level.characterstartindex = 0;

    self.characterindex = level.characterstartindex;
    level.characterstartindex++;
    return self.characterindex;
}

givecustomcharacters()
{
    self detachall();

    switch ( self selectcharacterindextouse() )
    {
        case 0:
            self character\c_usa_dempsey_zm::main();
            self setviewmodel( "viewmodel_usa_pow_arms" );
            self.characterindex = 0;
            break;
        case 1:
            self character\c_rus_nikolai_zm::main();
            self setviewmodel( "viewmodel_rus_prisoner_arms" );
            self.characterindex = 1;
            break;
        case 2:
            self character\c_jap_takeo_zm::main();
            self setviewmodel( "viewmodel_vtn_nva_standard_arms" );
            self.characterindex = 2;
            break;
        case 3:
            self character\c_ger_richtofen_zm::main();
            self setviewmodel( "viewmodel_usa_hazmat_arms" );
            self.characterindex = 3;
            break;
    }

    self setmovespeedscale( 1 );
    self setsprintduration( 4 );
    self setsprintcooldown( 0 );
}

givecustomloadout( takeallweapons, alreadyspawned )
{
    self giveweapon( "knife_zm" );
    self give_start_weapon( 1 );
}

prototype_zone_init()
{
    flag_init( "always_on" );
    flag_set( "always_on" );
    add_adjacent_zone( "start_zone", "box_zone", "start_2_box" );
    add_adjacent_zone( "start_zone", "upstairs_zone", "start_2_upstairs" );
    add_adjacent_zone( "box_zone", "upstairs_zone", "box_2_upstairs" );
}

include_powerups()
{
    include_powerup( "nuke" );
    include_powerup( "insta_kill" );
    include_powerup( "double_points" );
    include_powerup( "full_ammo" );
    include_powerup( "carpenter" );
}

include_weapons()
{
    include_weapon( "knife_zm", 0 );
    include_weapon( "frag_grenade_zm", 0 );
    include_weapon( "claymore_zm", 0 );
    include_weapon( "m1911_zm", 0 );
    include_weapon( "m1911_upgraded_zm", 0 );
    include_weapon( "python_zm" );
    include_weapon( "python_upgraded_zm", 0 );
    include_weapon( "fiveseven_zm" );
    include_weapon( "fiveseven_upgraded_zm", 0 );
    include_weapon( "saritch_zm" );
    include_weapon( "saritch_upgraded_zm", 0 );
    include_weapon( "type95_zm" );
    include_weapon( "type95_upgraded_zm", 0 );
    include_weapon( "xm8_zm" );
    include_weapon( "xm8_upgraded_zm", 0 );
    include_weapon( "thompson_zm", 0 );
    include_weapon( "thompson_upgraded_zm", 0 );
    include_weapon( "kard_zm" );
    include_weapon( "kard_upgraded_zm", 0 );
    include_weapon( "fivesevendw_zm" );
    include_weapon( "fivesevendw_upgraded_zm", 0 );
    include_weapon( "rottweil72_zm", 0 );
    include_weapon( "rottweil72_upgraded_zm", 0 );
    include_weapon( "judge_zm", 0 );
    include_weapon( "judge_upgraded_zm", 0 );
    include_weapon( "870mcs_zm", 0 );
    include_weapon( "870mcs_upgraded_zm", 0 );
    include_weapon( "saiga12_zm" );
    include_weapon( "saiga12_upgraded_zm", 0 );
    include_weapon( "srm1216_zm" );
    include_weapon( "srm1216_upgraded_zm", 0 );
    include_weapon( "galil_zm" );
    include_weapon( "galil_upgraded_zm", 0 );
    include_weapon( "an94_zm", 0 );
    include_weapon( "an94_upgraded_zm", 0 );
    include_weapon( "tar21_zm" );
    include_weapon( "tar21_upgraded_zm", 0 );
    include_weapon( "hk416_zm" );
    include_weapon( "hk416_upgraded_zm", 0 );
    include_weapon( "sa58_zm" );
    include_weapon( "sa58_upgraded_zm", 0 );
    include_weapon( "ballista_zm", 0 );
    include_weapon( "ballista_upgraded_zm", 0 );
    include_weapon( "dsr50_zm", 0 );
    include_weapon( "dsr50_upgraded_zm", 0 );
    include_weapon( "barretm82_zm" );
    include_weapon( "barretm82_upgraded_zm", 0 );
    include_weapon( "hamr_zm" );
    include_weapon( "hamr_upgraded_zm", 0 );
    include_weapon( "rpd_zm" );
    include_weapon( "rpd_upgraded_zm", 0 );
    include_weapon( "usrpg_zm" );
    include_weapon( "usrpg_upgraded_zm", 0 );
    include_weapon( "m32_zm" );
    include_weapon( "m32_upgraded_zm", 0 );
    include_weapon( "cymbal_monkey_zm" );
    include_weapon( "emp_grenade_zm" );
    include_weapon( "ray_gun_zm" );
    include_weapon( "ray_gun_upgraded_zm", 0 );
    include_weapon( "thundergun_zm" );
    include_weapon( "thundergun_upgraded_zm", 0 );
    include_weapon( "knife_ballistic_no_melee_zm", 0 );
    include_weapon( "knife_ballistic_no_melee_upgraded_zm", 0 );
    include_weapon( "knife_ballistic_zm" );
    include_weapon( "knife_ballistic_upgraded_zm", 0 );
    level._uses_retrievable_ballisitic_knives = 1;
    add_limited_weapon( "m1911_zm", 0 );
    add_limited_weapon( "thundergun_zm", 1 );
    add_limited_weapon( "knife_ballistic_zm", 1 );
}

custom_add_weapons()
{
    add_zombie_weapon( "m1911_zm", "m1911_upgraded_zm", &"ZOMBIE_WEAPON_M1911", 50, "pistol", "", undefined );
    add_zombie_weapon( "python_zm", "python_upgraded_zm", &"ZOMBIE_WEAPON_PYTHON", 50, "pistol", "", undefined );
    add_zombie_weapon( "fiveseven_zm", "fiveseven_upgraded_zm", &"ZOMBIE_WEAPON_FIVESEVEN", 50, "wpck_57", "", undefined, 1 );
    add_zombie_weapon( "kard_zm", "kard_upgraded_zm", &"ZOMBIE_WEAPON_KARD", 50, "smg", "", undefined );
    add_zombie_weapon( "thompson_zm", "thompson_upgraded_zm", &"ZOMBIE_PROTOTYPE_WEAPON_THOMPSON", 1200, "smg", "", undefined );
    add_zombie_weapon( "rottweil72_zm", "rottweil72_upgraded_zm", &"ZOMBIE_WEAPON_ROTTWEIL72", 1200, "shotgun", "", undefined );
    add_zombie_weapon( "judge_zm", "judge_upgraded_zm", &"ZOMBIE_WEAPON_JUDGE", 1200, "wpck_judge", "", undefined, 1 );
    add_zombie_weapon( "870mcs_zm", "870mcs_upgraded_zm", &"ZOMBIE_WEAPON_870MCS", 1500, "shotgun", "", undefined );
    add_zombie_weapon( "saiga12_zm", "saiga12_upgraded_zm", &"ZOMBIE_WEAPON_SAIGA12", 50, "wpck_saiga12", "", undefined, 1 );
    add_zombie_weapon( "srm1216_zm", "srm1216_upgraded_zm", &"ZOMBIE_WEAPON_SRM1216", 50, "wpck_m1216", "", undefined, 1 );
    add_zombie_weapon( "galil_zm", "galil_upgraded_zm", &"ZOMBIE_WEAPON_GALIL", 50, "assault", "", undefined );
    add_zombie_weapon( "saritch_zm", "saritch_upgraded_zm", &"ZOMBIE_WEAPON_SARITCH", 600, "wpck_sidr", "", undefined, 1 );
    add_zombie_weapon( "an94_zm", "an94_upgraded_zm", &"ZOMBIE_WEAPON_AN94", 1800, "rifle", "", undefined );
    add_zombie_weapon( "frag_grenade_zm", undefined, &"ZOMBIE_WEAPON_FRAG_GRENADE", 250, "grenade", "", undefined );
    add_zombie_weapon( "cymbal_monkey_zm", undefined, &"ZOMBIE_WEAPON_SATCHEL_2000", 2000, "monkey", "", undefined );
    add_zombie_weapon( "knife_ballistic_zm", "knife_ballistic_upgraded_zm", &"ZOMBIE_WEAPON_KNIFE_BALLISTIC", 10, "sickle", "", undefined );
    add_zombie_weapon( "knife_ballistic_bowie_zm", "knife_ballistic_bowie_upgraded_zm", &"ZOMBIE_WEAPON_KNIFE_BALLISTIC", 10, "sickle", "", undefined );
    add_zombie_weapon( "knife_ballistic_no_melee_zm", "knife_ballistic_no_melee_upgraded_zm", &"ZOMBIE_WEAPON_KNIFE_BALLISTIC", 10, "sickle", "", undefined );
    add_zombie_weapon( "fivesevendw_zm", "fivesevendw_upgraded_zm", &"ZOMBIE_WEAPON_FIVESEVENDW", 50, "dualwield", "", undefined );
    add_zombie_weapon( "type95_zm", "type95_upgraded_zm", &"ZOMBIE_WEAPON_TYPE95", 50, "wpck_type25", "", undefined, 1 );
    add_zombie_weapon( "xm8_zm", "xm8_upgraded_zm", &"ZOMBIE_WEAPON_XM8", 50, "burstrifle", "", undefined );
    add_zombie_weapon( "tar21_zm", "tar21_upgraded_zm", &"ZOMBIE_WEAPON_TAR21", 50, "wpck_x95l", "", undefined, 1 );
    add_zombie_weapon( "hk416_zm", "hk416_upgraded_zm", &"ZOMBIE_WEAPON_HK416", 100, "assault", "", undefined );
    add_zombie_weapon( "sa58_zm", "sa58_upgraded_zm", &"ZOMBIE_WEAPON_SA58", 50, "burstrifle", "", undefined );
    add_zombie_weapon( "ballista_zm", "ballista_upgraded_zm", &"ZOMBIE_PROTOTYPE_WEAPON_BALLISTA", 200, "sniper", "", undefined );
    add_zombie_weapon( "dsr50_zm", "dsr50_upgraded_zm", &"ZOMBIE_WEAPON_DR50", 50, "wpck_dsr50", "", undefined, 1 );
    add_zombie_weapon( "barretm82_zm", "barretm82_upgraded_zm", &"ZOMBIE_WEAPON_BARRETM82", 50, "wpck_m82a1", "", undefined, 1 );
    add_zombie_weapon( "hamr_zm", "hamr_upgraded_zm", &"ZOMBIE_WEAPON_HAMR", 50, "wpck_hamr", "", undefined, 1 );
    add_zombie_weapon( "rpd_zm", "rpd_upgraded_zm", &"ZOMBIE_WEAPON_RPD", 50, "wpck_rpd", "", undefined, 1 );
    add_zombie_weapon( "thundergun_zm", "thundergun_upgraded_zm", &"ZOMBIE_WEAPON_THUNDERGUN", 10, "thunder", "", undefined );
    add_zombie_weapon( "usrpg_zm", "usrpg_upgraded_zm", &"ZOMBIE_WEAPON_USRPG", 50, "launcher", "", undefined );
    add_zombie_weapon( "m32_zm", "m32_upgraded_zm", &"ZOMBIE_WEAPON_M32", 50, "launcher", "", undefined );
}

init_level_specific_wall_buy_fx()
{
    level._effect["frag_grenade_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_frag_nade" );
    level._effect["an94_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_an94" );
    level._effect["ballista_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_ballista" );
    level._effect["judge_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_executioner" );
    level._effect["saritch_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_smr" );
    level._effect["thompson_zm_fx"] = loadfx( "maps/zombie/fx_zmb_wall_buy_thompson" );
}

prototype_eggs()
{
    trigs = getentarray( "evt_egg_killme", "targetname" );

    for ( i = 0; i < trigs.size; i++ )
        trigs[i] thread check_for_egg_damage();
}

check_for_egg_damage()
{
    if ( !isdefined( level.egg_damage_counter ) )
        level.egg_damage_counter = 0;

    self waittill( "damage" );
    level.egg_damage_counter = level.egg_damage_counter + 1;
}

time_to_play()
{
    if ( !isdefined( level.egg_damage_counter ) )
        level.egg_damage_counter = 0;

    while ( level.egg_damage_counter < 3 )
        wait 0.5;

    level.music_override = 1;
    level thread maps\mp\zombies\_zm_audio::change_zombie_music( "egg" );
    wait 4;
    wait 223;
    level.music_override = 0;
    level thread maps\mp\zombies\_zm_audio::change_zombie_music( "wave_loop" );
}
