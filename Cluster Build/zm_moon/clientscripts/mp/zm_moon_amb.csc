// T6 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool
#include clientscripts\mp\_utility;
#include clientscripts\mp\_ambientpackage;
#include clientscripts\mp\_music;
#include clientscripts\mp\_busing;
#include clientscripts\mp\_audio;

main()
{
    level._audio_zombie_gasmask_func = ::enable_gasmask_audio;
    level.audio_zones_breached = [];
    level.audio_zones_breached["1"] = 0;
    level.audio_zones_breached["2a"] = 0;
    level.audio_zones_breached["2b"] = 0;
    level.audio_zones_breached["3a"] = 0;
    level.audio_zones_breached["3b"] = 0;
    level.audio_zones_breached["3c"] = 0;
    level.audio_zones_breached["4a"] = 0;
    level.audio_zones_breached["4b"] = 0;
    level.audio_zones_breached["5"] = 0;
    level.audio_zones_breached["6"] = 0;
    declareambientroom( "space", 1 );
    declareambientpackage( "space" );
    setambientroomtone( "space", "amb_wind_outside", 0.6, 1 );
    setambientroomreverb( "space", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "space", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "space", "zmb_moon_airless" );
    declareambientroom( "airlock" );
    declareambientpackage( "airlock" );
    setambientroomtone( "airlock", "", 0.6, 1 );
    setambientroomreverb( "airlock", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "airlock", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "airlock", "zmb_moon_airless" );
    declareambientroom( "ZONE1_moon_room_large" );
    declareambientpackage( "ZONE1_moon_room_large" );
    setambientroomtone( "ZONE1_moon_room_large", "", 0.6, 1 );
    setambientroomreverb( "ZONE1_moon_room_large", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE1_moon_room_large", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE1_moon_room_large", "zmb_moon_airless" );
    declareambientroom( "ZONE2a_moon_caves" );
    declareambientpackage( "ZONE2a_moon_caves" );
    setambientroomtone( "ZONE2a_moon_caves", "", 0.6, 1 );
    setambientroomreverb( "ZONE2a_moon_caves", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE2a_moon_caves", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE2a_moon_caves", "zmb_moon_airless" );
    declareambientroom( "ZONE2b_moon_caves" );
    declareambientpackage( "ZONE2b_moon_caves" );
    setambientroomtone( "ZONE2b_moon_caves", "", 0.6, 1 );
    setambientroomreverb( "ZONE2b_moon_caves", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE2b_moon_caves", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE2b_moon_caves", "zmb_moon_airless" );
    declareambientroom( "ZONE3a_moon_caves" );
    declareambientpackage( "ZONE3a_moon_caves" );
    setambientroomtone( "ZONE3a_moon_caves", "", 0.6, 1 );
    setambientroomreverb( "ZONE3a_moon_caves", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE3a_moon_caves", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE3a_moon_caves", "zmb_moon_airless" );
    declareambientroom( "ZONE3b_moon_room_medium" );
    declareambientpackage( "ZONE3b_moon_room_medium" );
    setambientroomtone( "ZONE3b_moon_room_medium", "", 0.6, 1 );
    setambientroomreverb( "ZONE3b_moon_room_medium", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE3b_moon_room_medium", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE3b_moon_room_medium", "zmb_moon_airless" );
    declareambientroom( "ZONE3c_moon_caves" );
    declareambientpackage( "ZONE3c_moon_caves" );
    setambientroomtone( "ZONE3c_moon_caves", "", 0.6, 1 );
    setambientroomreverb( "ZONE3c_moon_caves", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE3c_moon_caves", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE3c_moon_caves", "zmb_moon_airless" );
    declareambientroom( "ZONE4a_moon_room_medium" );
    declareambientpackage( "ZONE4a_moon_room_medium" );
    setambientroomtone( "ZONE4a_moon_room_medium", "", 0.6, 1 );
    setambientroomreverb( "ZONE4a_moon_room_medium", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE4a_moon_room_medium", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE4a_moon_room_medium", "zmb_moon_airless" );
    declareambientroom( "ZONE4a_moon_hallway" );
    declareambientpackage( "ZONE4a_moon_hallway" );
    setambientroomtone( "ZONE4a_moon_hallway", "", 0.6, 1 );
    setambientroomreverb( "ZONE4a_moon_hallway", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE4a_moon_hallway", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE4a_moon_hallway", "zmb_moon_airless" );
    declareambientroom( "ZONE4b_moon_room_medium" );
    declareambientpackage( "ZONE4b_moon_room_medium" );
    setambientroomtone( "ZONE4b_moon_room_medium", "", 0.6, 1 );
    setambientroomreverb( "ZONE4b_moon_room_medium", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE4b_moon_room_medium", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE4b_moon_room_medium", "zmb_moon_airless" );
    declareambientroom( "ZONE5_atrium" );
    declareambientpackage( "ZONE5_atrium" );
    setambientroomtone( "ZONE5_atrium", "", 0.6, 1 );
    setambientroomreverb( "ZONE5_atrium", "rv_zmbtemple_cave_tunnels", 1, 1 );
    setambientroomcontext( "ZONE5_atrium", "ringoff_plr", "outdoor" );
    setambientroomsnapshot( "ZONE5_atrium", "zmb_moon_airless" );
    declareambientroom( "earth_outdoors" );
    declareambientpackage( "earth_outdoors" );
    setambientroomtone( "earth_outdoors", "amb_earth_bg", 0.6, 1 );
    setambientroomreverb( "earth_outdoors", "rv_mparea51_outdoor", 1, 1 );
    setambientroomcontext( "earth_outdoors", "ringoff_plr", "outdoor" );
    declareambientroom( "earth_hangar" );
    declareambientpackage( "earth_hangar" );
    setambientroomtone( "earth_hangar", "amb_earth_bg", 0.6, 1 );
    setambientroomreverb( "earth_hangar", "rv_mparea51_partial_room_metal", 1, 1 );
    setambientroomcontext( "earth_hangar", "ringoff_plr", "outdoor" );
    activateambientroom( 0, "space", 0 );
    activateambientpackage( 0, "space", 0 );
    declaremusicstate( "WAVE" );
    musicaliasloop( "mus_moon_underscore", 4, 2 );
    declaremusicstate( "EGG" );
    musicalias( "mus_egg", 1 );
    declaremusicstate( "SILENCE" );
    musicalias( "null", 1 );
    declaremusicstate( "EGG_A7X" );
    musicalias( "mus_egg_a7x", 1 );
    declaremusicstate( "SAM" );
    musicalias( "mus_samantha_reveal", 1 );
    level thread setup_airless_ambient_packages();
    level thread teleporter_audio_sfx();
    level thread beam_fx_audio();
    level thread zone_alarms_setup();
    level thread waitfor_gasmask_buy();
    level thread waitfor_gasmask_on();
    level thread ambience_randoms();
    level thread snd_start_autofx_audio();
}

snd_start_autofx_audio()
{
    snd_play_auto_fx( "fx_moon_floodlight_wide", "amb_lights" );
    snd_play_auto_fx( "fx_moon_floodlight_narrow", "amb_lights" );
}

ambience_randoms()
{
    level waittill( "power_on" );
    array_thread( getstructarray( "amb_random_beeps", "targetname" ), ::play_random_beeps );
}

play_random_beeps()
{
    while ( true )
    {
        playsound( 0, "amb_random_beeps", self.origin );
        wait( randomintrange( 10, 30 ) );
    }
}

waitfor_gasmask_on()
{
    while ( true )
    {
        level waittill( "gmsk2" );
        playsound( 0, "evt_gasmask_on", ( 0, 0, 0 ) );
    }
}

waitfor_gasmask_buy()
{
    level waittill( "gmsk" );
    playsound( 0, "evt_gasmask_suit_on", ( 0, 0, 0 ) );
}

zone_alarms_setup()
{
    wait 5;
    array1 = getstructarray( "zone_alarm", "targetname" );
    array2 = getstructarray( "zone_shakes", "targetname" );

    if ( !isdefined( array1 ) || !isdefined( array2 ) )
        return;

    array_thread( array1, ::play_zone_alarms );
    array_thread( array2, ::play_zone_shakes );
}

play_zone_alarms()
{
    level endon( "Dz" + self.script_noteworthy + "e" );
    self thread reset_alarms();
    level waittill( "Dz" + self.script_noteworthy );

    while ( true )
    {
        playsound( 0, "evt_zone_alarm", self.origin );
        wait 2.8;
    }
}

play_zone_shakes()
{
    level endon( "Dz" + self.script_noteworthy + "e" );
    self thread reset_shakes();
    level waittill( "Dz" + self.script_noteworthy );

    while ( true )
    {
        playsound( 0, "evt_digger_rattles_random", self.origin );
        wait( randomfloatrange( 1.2, 2.3 ) );
    }
}

reset_alarms()
{
    level waittill( "Dz" + self.script_noteworthy + "e" );
    wait 2;
    self thread play_zone_alarms();
}

reset_shakes()
{
    level waittill( "Dz" + self.script_noteworthy + "e" );
    wait 2;
    self thread play_zone_shakes();
}

beam_fx_audio()
{
    while ( true )
    {
        level waittill( "bmfx" );
        playsound( 0, "evt_teleporter_beam_sfx", ( 0, 0, 0 ) );
    }
}

teleporter_audio_sfx()
{
    click_array = getstructarray( "teleporter_click_sfx", "targetname" );
    warmup_array = getstructarray( "teleporter_warmup_sfx", "targetname" );

    while ( true )
    {
        level waittill( "tafx" );
        array_thread( click_array, ::play_teleporter_sounds );
        array_thread( warmup_array, ::play_warmup_cooldown );
    }
}

play_teleporter_sounds()
{
    level endon( "cafx" );
    wait 0.5;

    if ( isdefined( self.script_int ) && isdefined( self.script_noteworthy ) )
    {
        val = int( self.script_noteworthy ) / 2;
        wait( val );
        playsound( 0, "evt_teleporter_click_" + self.script_noteworthy, self.origin );
    }
}

play_warmup_cooldown()
{
    level endon( "cafx" );
    wait 0.5;
    playsound( 0, "evt_teleporter_warmup", self.origin );
    wait 2;
    playsound( 0, "evt_teleporter_cooldown", self.origin );
}

setup_zone_1_special()
{
    level waittill( "power_on" );
    level reset_ambient_packages( "1", 1 );
    level reset_ambient_packages( "2a", 1 );
    level reset_ambient_packages( "2b", 1 );
    level reset_ambient_packages( "3a", 1 );
    level reset_ambient_packages( "3b", 1 );
    level reset_ambient_packages( "3c", 1 );
    level reset_ambient_packages( "4a", 1 );
    level reset_ambient_packages( "4b", 1 );
    level reset_ambient_packages( "5", 1 );
    level reset_ambient_packages( "6", 1 );
}

setup_airless_ambient_packages()
{
    wait 5;
    trigs = getentarray( 0, "ambient_package", "targetname" );

    for ( i = 0; i < trigs.size; i++ )
    {
        if ( isdefined( trigs[i].script_ambientroom ) )
            trigs[i] remember_old_verb( trigs[i].script_ambientroom );

        trigs[i].first_time = 1;
    }

    level thread setup_zone_1_special();
    level thread waitfor_notify( "1" );
    level thread waitfor_notify( "2a" );
    level thread waitfor_notify( "2b" );
    level thread waitfor_notify( "3a" );
    level thread waitfor_notify( "3b" );
    level thread waitfor_notify( "3c" );
    level thread waitfor_notify( "4a" );
    level thread waitfor_notify( "4b" );
    level thread waitfor_notify( "5" );
}

waitfor_notify( zone, array )
{
    level waittill( "Az" + zone );
    level reset_ambient_packages( zone );
}

reset_ambient_packages( zone, poweron )
{
    if ( !isdefined( poweron ) )
        poweron = 0;

    if ( isdefined( zone ) )
    {
        trigs = getentarray( 0, "ambient_package", "targetname" );
        zone_array = [];
        z = 0;

        for ( i = 0; i < trigs.size; i++ )
        {
            if ( isdefined( trigs[i].script_noteworthy ) && isdefined( trigs[i].script_ambientroom ) )
            {
                if ( trigs[i].script_noteworthy == zone )
                {
                    if ( poweron && !level.audio_zones_breached[zone] )
                    {
                        if ( isdefined( trigs[i].script_string ) )
                            setambientroomtone( trigs[i].script_ambientroom, trigs[i].script_string, 0.25, 0.25 );

                        setambientroomsnapshot( trigs[i].script_ambientroom, "" );
                        zone_array[z] = trigs[i];
                        z++;
                        continue;
                    }

                    setambientroomtone( trigs[i].script_ambientroom, "", 0.25, 0.25 );
                    setambientroomsnapshot( trigs[i].script_ambientroom, "zmb_moon_airless" );
                    zone_array[z] = trigs[i];
                    z++;
                }
            }
        }

        players = getlocalplayers();

        for ( i = 0; i < players.size; i++ )
        {
            for ( a = 0; a < zone_array.size; a++ )
            {
                if ( players[i] istouching( zone_array[a] ) )
                {
                    level.activeambientroom = "";
                    level.activeambientpackage = "";
                    level notify( "updateActiveAmbientRoom" );
                    level notify( "updateActiveAmbientPackage" );

                    if ( !level.audio_zones_breached[zone] )
                    {
                        if ( poweron )
                            players[i] playsound( 0, "evt_air_repressurize" );
                        else if ( !zone_array[a].first_time )
                        {
                            if ( zone == "5" )
                                players[i] playsound( 0, "evt_dig_wheel_breakthrough_bio" );
                            else if ( ( zone == "2a" || zone == "2b" ) && !level.audio_zones_breached["2b"] || ( zone == "3a" || zone == "3b" || zone == "3c" ) && !level.audio_zones_breached["3b"] )
                                players[i] playsound( 0, "evt_dig_wheel_breakthrough" );

                            players[i] playsound( 0, "evt_air_release" );
                        }
                    }
                }

                zone_array[a].first_time = 0;
            }
        }

        if ( !poweron )
            level.audio_zones_breached[zone] = 1;
    }
}

enable_gasmask_audio( on )
{
    if ( on )
    {
        trigs = getentarray( 0, "ambient_package", "targetname" );

        for ( i = 0; i < trigs.size; i++ )
        {
            if ( isdefined( trigs[i].script_ambientroom ) )
            {
                setambientroomreverb( trigs[i].script_ambientroom, "rebirth_hazmat", 1, 1 );
                setambientroomcontext( trigs[i].script_ambientroom, "ringoff_plr", "indoor" );
            }
        }

        snd_set_snapshot( "zmb_moon_gasmask" );
        level.activeambientroom = "";
        level.activeambientpackage = "";
        level notify( "updateActiveAmbientRoom" );
        level notify( "updateActiveAmbientPackage" );
    }
    else
    {
        trigs = getentarray( 0, "ambient_package", "targetname" );

        for ( i = 0; i < trigs.size; i++ )
        {
            if ( isdefined( trigs[i].script_ambientroom ) && isdefined( trigs[i].masterreverbroomtype ) )
            {
                setambientroomreverb( trigs[i].script_ambientroom, trigs[i].masterreverbroomtype, 1, 1 );
                setambientroomcontext( trigs[i].script_ambientroom, "ringoff_plr", "outdoor" );
            }
        }

        snd_set_snapshot( "default" );
        level.activeambientroom = "";
        level.activeambientpackage = "";
        level notify( "updateActiveAmbientRoom" );
        level notify( "updateActiveAmbientPackage" );
    }
}

remember_old_verb( name )
{
    if ( !isdefined( self.masterreverbroomtype ) )
        self.masterreverbroomtype = level.ambientrooms[name].reverb.reverbroomtype;
}
